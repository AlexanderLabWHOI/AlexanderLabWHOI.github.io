<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexander Lab @ WHOI on Alexander Lab @ WHOI</title>
    <link>https://alexanderlabwhoi.github.io/</link>
    <description>Recent content in Alexander Lab @ WHOI on Alexander Lab @ WHOI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0400</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Running Jupyter Notebooks Remotely with Slurm</title>
      <link>https://alexanderlabwhoi.github.io/post/2019-03-08_jpn-slurm/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/post/2019-03-08_jpn-slurm/</guid>
      <description>

&lt;p&gt;I run the bulk of my bioinformatic analyses remotely on a server or HPC, as they require more computational power or space than I have on my local computer. Rather than transfer the intermediate byproducts of these analyses (which may often be very large) to my local machine, I  prefer to examine and analyze the data remotely using Jupyter. As jupyter notebook are browser-based, if you &lt;code&gt;jupyter notebook&lt;/code&gt; command on the remote machine you will not be able to interact with . Rather, you need to create a connection between your local browser and the remote Jupyter session. Here I am showing a special case, where you might want to run jupyter notebooks on a larger compute node via an interactive session with slurm.&lt;/p&gt;

&lt;h2 id=&#34;starting-your-interactive-job-with-slurm&#34;&gt;Starting your interactive job with slurm&lt;/h2&gt;

&lt;p&gt;First things first: start up a &lt;code&gt;tmux&lt;/code&gt; session (or &lt;code&gt;screen&lt;/code&gt; if you prefer). If I am looking to have some program running for longer than I am wanting to keep a terminal window open &amp;ndash; &lt;code&gt;tmux&lt;/code&gt; or &lt;code&gt;screen&lt;/code&gt; are great options as they keep your session from timing out on remote machines. I have a preference for &lt;a href=&#34;https://superuser.com/questions/236158/tmux-vs-screen&#34; target=&#34;_blank&#34;&gt;tmux&lt;/a&gt;, but it is really up to you.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tmux new -s jupyter
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we are in our new tmux session, it is time to request an real-time run on the remote HPC. Using the slurm command &lt;a href=&#34;https://slurm.schedmd.com/srun.html&#34; target=&#34;_blank&#34;&gt;srun&lt;/a&gt;, I am asking for 2 hours to run on two CPUs on a queue called main. You can customize this to your needs and resources by requesting more nodes, memory, etc.:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;srun -p main --time=02:00:00 --ntasks-per-node 2 --pty bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will log you onto some node which will be noted in your command prompt. For example, my command line prompt changed from &lt;code&gt;halexander@hpc&lt;/code&gt; to &lt;code&gt;halexander@node1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I have many commands that I like in my &lt;code&gt;.bash_profile&lt;/code&gt; that are not otherwise carried over to this new machine that we just logged into, so go ahead and source my bash profile (&lt;code&gt;source ~/.bash_profile&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&#34;creating-a-conda-environment-and-starting-a-jupyter-notebook&#34;&gt;Creating a conda environment and starting a jupyter notebook&lt;/h2&gt;

&lt;p&gt;I like to run each of my various projects in its own conda environment. There are many reasons for this: reproducibility, control over program versions, dealing with conflicting package requirements, and, especially for on a shared compute resource (like an HPC), bypassing having root permission for installing programs. Another nice bonus for this particular case is that conda environments will automatically have &lt;code&gt;jupyter&lt;/code&gt; installed. So, create a conda environment (if you haven&amp;rsquo;t already):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;conda create conda-env
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and activate it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source activate conda-env
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should now see that your terminal prompt has changed to something like the following, indicating that you are logged onto the interactive node and working within the conda-env environment:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(conda-env) halexander@node1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One issue I encountered (that may be specific to my local HPC) that I want to note. If I try to run the command &lt;code&gt;jupyter notebook&lt;/code&gt; right away I get the following error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Traceback (most recent call last):
  File &amp;quot;/address/home/halexander/.conda/envs/conda-env/lib/python3.6/site-packages/traitlets/traitlets.py&amp;quot;, line 528, in get
    value = obj._trait_values[self.name]
KeyError: &#39;runtime_dir&#39;
....
PermissionError: [Errno 13] Permission denied: &#39;/run/user/12746&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To get around this issue I found some help on &lt;a href=&#34;https://stackoverflow.com/questions/35878178/jupyter-notebook-permission-error&#34; target=&#34;_blank&#34;&gt;StackOverflow&lt;/a&gt;. (Google is your friend for pesky errors like this.) This simple export command fixed my problem:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export XDG_RUNTIME_DIR=&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, it is time to start up a jupyter notebook! On the remote machine type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jupyter notebook --no-browser --port=8888
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(Note, the default is for jupyter notebook to automatically open a browser &amp;ndash; but we can&amp;rsquo;t do that on a remote server, so we bypass that function with the &lt;code&gt;--no-browser&lt;/code&gt; flag.)&lt;/p&gt;

&lt;p&gt;I regularly want to run this command and hate typing, so I went ahead and created a function to streamline this process:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function jpt(){
    jupyter notebook --no-browser --port=$1
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This allows you to just type &lt;code&gt;jpt&lt;/code&gt; and a port number and the command will be taken care of. If you want to use this function, simply copy the above and place it in your &lt;code&gt;.bash_profile&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, &lt;code&gt;jpt 8888&lt;/code&gt; will start a jupyter notebook on the port 8888.&lt;/p&gt;

&lt;p&gt;If all is well, after running the above command, you should see something like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[I 14:22:55.931 NotebookApp] Writing notebook server cookie secret to /hpc/home/halexander/.local/share/jupyter/runtime/notebook_cookie_secret
[I 14:23:01.371 NotebookApp] [jupyter_nbextensions_configurator] enabled 0.4.1
[I 14:23:01.371 NotebookApp] Serving notebooks from local directory: /vortexfs1/scratch/halexander/tara/sourmash-analysis
[I 14:23:01.371 NotebookApp] The Jupyter Notebook is running at:
[I 14:23:01.371 NotebookApp] http://localhost:8888/
[I 14:23:01.371 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##Creating an SSH tunnel&lt;/p&gt;

&lt;p&gt;You are now ready to create a &lt;a href=&#34;https://en.wikipedia.org/wiki/Tunneling_protocol&#34; target=&#34;_blank&#34;&gt;tunnel&lt;/a&gt; from your local computer to the jupyter notebook running on the HPC.&lt;/p&gt;

&lt;p&gt;Open a new terminal on your local machine. In the above example, I started a notebook on &lt;code&gt;node1&lt;/code&gt; at port &lt;code&gt;8888&lt;/code&gt; and my username is &lt;code&gt;halexander&lt;/code&gt; and the address of my HPC is &lt;code&gt;hpc.address.edu&lt;/code&gt;. So, to create the tunnel I would type the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -t -t halexander@hpc.address.edu -L 8888:localhost:8888 ssh node1 -L 8888:localhost:8888
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is a lot of typing, so it is simpler to create another bash function that you can put in your local &lt;code&gt;.bash_profile&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function jptnode(){
    # Forwards port $1 into port $2 and listens to it
        ssh -t -t halexander@hpc.address.edu -L $1:localhost:$1 ssh $2 -L $1:localhost:$1
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will of course want to customize the above function to contain your username in place of &lt;code&gt;halexander&lt;/code&gt; and the address of your hpc in place of &lt;code&gt;hpc.address.edu&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;$&lt;/code&gt; indicates the input variables in this function, with &lt;code&gt;$1&lt;/code&gt; being the port you specified for the jupyter notebook and &lt;code&gt;$2&lt;/code&gt; being the name of the node you are running the notebook on. So, to use this function you would type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jptnode 8888 node1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you run this, you should notice that your terminal window has been logged on to your remote HPC and then logged onto the requested node.&lt;/p&gt;

&lt;p&gt;You can now open your browser of choice and go to &lt;code&gt;localhost:8888&lt;/code&gt; and you should see the jupyter dashboard. You should be able to start working in jupyter notebooks, downloading data, or do any other things you want to do through the jupyter dashboard. Make sure to shutdown the jupyter notebook when you are done.&lt;/p&gt;

&lt;h2 id=&#34;a-few-important-notes&#34;&gt;A few important notes&lt;/h2&gt;

&lt;p&gt;1) Before you connect to a remote server with jupyter notebook make sure that you have configured jupyter with password information. You can do this by editing the &lt;code&gt;jupyter-notebook_config.json&lt;/code&gt; which is usually located in &lt;code&gt;~/.jupyter&lt;/code&gt; or by typing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jupyter notebook password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which will prompt you for a password that will be used for future notebooks.&lt;/p&gt;

&lt;p&gt;2) Make sure you shutdown  your jupyter notebook when you are done. To do this, you can log back onto the tmux session you started earlier (&lt;code&gt;tmux a -t jupyter&lt;/code&gt;) where the jupyter notebook is running and use &lt;code&gt;ctrl-C&lt;/code&gt; should shutdown the jupyter notebook. If you run into issues with a port still being used, chances are that a notebook is still running somewhere.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Keeping it light: (Re)analyzing community-wide datasets without major infrastructure</title>
      <link>https://alexanderlabwhoi.github.io/publication/alexander2018/</link>
      <pubDate>Sat, 01 Dec 2018 00:00:00 -0500</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/publication/alexander2018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Re-assembly, quality evaluation, and annotation of 678 microbial eukaryotic reference transcriptomes</title>
      <link>https://alexanderlabwhoi.github.io/publication/johnson2018/</link>
      <pubDate>Sat, 01 Dec 2018 00:00:00 -0500</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/publication/johnson2018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Eukaryotic Metagenome Assembled Genomes (MAGs)</title>
      <link>https://alexanderlabwhoi.github.io/projects/euk-mags/</link>
      <pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/projects/euk-mags/</guid>
      <description>&lt;p&gt;Protists, or eukaryotic microbes, are key players in marine ecosystems, encompassing primary producers (phytoplankton), mixotrophs, and heterotrophs. Similar to their prokaryotic microbial counterparts (bacteria and archaea), many protists cannot be cultured, making the direct study of their biology in the lab challenging. Molecular and genomic approaches, particularly those applied to whole, mixed communities (e.g. metagenomics), have shed light on the ecological roles, evolutionary histories, and physiological capabilities of these organisms. Metagenomic analyses have traditionally focused on the analysis of species and gene content and shifts in relative abundance between samples. Recently, new computational approaches have been developed to facilitate the retrieval of nearly complete prokaryotic genomes from metagenomes, a process referred to as &amp;lsquo;binning&amp;rsquo; that generates Metagenome Assembled Genomes (MAGs). Genome binning approaches have yet to be applied to metagenomic data to specifically isolate eukaryotic MAGs.&lt;/p&gt;

&lt;p&gt;This year the metagenomic data corresponding to protist size fractions (0.8  m - 2000  m) from Tara Oceans were published, spanning the world&amp;rsquo;s oceans. These data represent the largest metagenomic sequencing initiative focused on protists and provide the unique opportunity to retool existing prokaryotic binning approaches to construct new eukaryotic genomes. We are working to capitalize on the release of these data and the high-memory computational power available at WHOI to (1) establish a eukaryotic MAG pipeline for the assembly and binning of eukaryotic genomes from marine metagenomes, (2) test the efficacy this pipeline with a series of mock community metagenomes, and (3) apply the eukaryotic MAG pipeline to extract eukaryotic genomes out of the Tara Oceans metagenomes. This work will establish new computational approaches for the analysis of eukaryotic metagenomes that will be broadly applicable to all metagenomic samples.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello, world.</title>
      <link>https://alexanderlabwhoi.github.io/post/firstpost/</link>
      <pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/post/firstpost/</guid>
      <description>&lt;p&gt;Two months ago, I started in the Biology Department at the &lt;a href=&#34;whoi.edu&#34; target=&#34;_blank&#34;&gt;Woods Hole Oceanographic Institution&lt;/a&gt; as an Assistant Scientist. The processes has been otherworldly. Suddenly I find myself the steward of my own ship (read: lab). My emotional state seems to oscillate between excited exhilaration and existential terror (&lt;em&gt;O&lt;/em&gt; 3 kHz). I have spent the last 11 (or more) years working towards this very moment&amp;ndash; so it is surreal to have officially arrived. And now&amp;hellip; what? Grants, papers, setting up a wet lab, navigating tenure, defining my scientific brand?&lt;/p&gt;

&lt;p&gt;One thing I would like to practice more than I have during previous career stages is making writing more of a habit. Voicing myself in a public sphere has always made me nervous (reference that time in first grade when I got a nosebleed while leading the class in the pledge of allegiance). Be it giving a scientific talk, speaking up in a meeting or seminar, or tweeting (oh hey, you, follow me &lt;a href=&#34;https://twitter.com/intent/user?screen_name=nekton4plankton&#34; target=&#34;_blank&#34;&gt;@nekton4plankton&lt;/a&gt;), I have to push by the jitters and psych myself up a bit.&lt;/p&gt;

&lt;p&gt;So, consider this blog my attempt to habituate myself to making my thoughts more public. Topics to be covered will likely include: science, new PI life, computational blunders and wins, and life in a small, science-y fishing village.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Transcriptional Basis of Sinking</title>
      <link>https://alexanderlabwhoi.github.io/projects/cosci/</link>
      <pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/projects/cosci/</guid>
      <description>&lt;p&gt;During the &lt;a href=&#34;http://deep-dom.blogspot.com/&#34; target=&#34;_blank&#34;&gt;DeepDOM&lt;/a&gt; cruise, we transited through the Amazon plume. The Amazon river is responsible for ~15% of all fresh water input to the world&amp;rsquo;s oceans. Consequently, this region represents a unique biogeochemical environment, characterized by low salinity and rich in terrestrial carbon and nutrients. In the low salinity lens of the plume, we discovered a blooming species of &lt;em&gt;Coscinodiscus&lt;/em&gt;, a centric diatom. We were able to monitor its physiological status in situ, perform field incubation experiments, and recover and isolate from this bloom to study in culture. Using these data we hope to address three questions: 1) What are the metabolic underpinnings of the &lt;em&gt;Coscinodiscus&lt;/em&gt; response to N, P, or Si stress? 2) Do N, P, or Si responses suggest a control on the &lt;em&gt;Coscinodiscus&lt;/em&gt; bloom in the Amazon Plume? and 3) How does competition affect physiological ecology?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>QIIME 2: Reproducible, interactive, scalable, and extensible microbiome data science</title>
      <link>https://alexanderlabwhoi.github.io/publication/bolyen2018/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 -0400</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/publication/bolyen2018/</guid>
      <description>

&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;

&lt;p&gt;We present QIIME 2, an open-source microbiome data science platform accessible to users spanning the microbiome research ecosystem, from scientists and engineers to clinicians and policy makers. QIIME 2 provides new features that will drive the next generation of microbiome research. These include interactive spatial and temporal analysis and visualization tools, support for metabolomics and shotgun metagenomics analysis, and automated data provenance tracking to ensure reproducible, transparent microbiome data science.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Transcriptional patterns identify resource controls on the diazotroph Trichodesmium in the Atlantic and Pacific oceans</title>
      <link>https://alexanderlabwhoi.github.io/publication/rouco2018/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/publication/rouco2018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Shifting metabolic priorities among key protistan taxa within and below the euphotic zone</title>
      <link>https://alexanderlabwhoi.github.io/publication/hu2018/</link>
      <pubDate>Sun, 01 Apr 2018 00:00:00 -0400</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/publication/hu2018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>What are the type, direction, and strength of species, community, and ecosystem responses to warming in aquatic mesocosm studies and their dependency on experimental characteristics? A systematic review protocol</title>
      <link>https://alexanderlabwhoi.github.io/publication/guy-haim2017/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 -0500</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/publication/guy-haim2017/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Transcriptional response of the harmful raphidophyte Heterosigma akashiwo to nitrate and phosphate stress</title>
      <link>https://alexanderlabwhoi.github.io/publication/haley2017/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 -0400</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/publication/haley2017/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Conserved transcriptional responses to nutrient stress in bloom-forming algae</title>
      <link>https://alexanderlabwhoi.github.io/publication/harke2017/</link>
      <pubDate>Sat, 01 Jul 2017 00:00:00 -0400</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/publication/harke2017/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Virus-host relationships of marine single-celled eukaryotes resolved from metatranscriptomics</title>
      <link>https://alexanderlabwhoi.github.io/publication/moniruzzaman2017/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 -0400</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/publication/moniruzzaman2017/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Integrating &#39;big data&#39; into aquatic ecology: Challenges and opportunities</title>
      <link>https://alexanderlabwhoi.github.io/publication/durden2017/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0500</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/publication/durden2017/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Phosphorus availability regulates intracellular nucleotides in marine eukaryotic phytoplankton</title>
      <link>https://alexanderlabwhoi.github.io/publication/kujawinski2017/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0500</pubDate>
      
      <guid>https://alexanderlabwhoi.github.io/publication/kujawinski2017/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
